{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["ProjectsPage","render","data","this","props","siteTitle","site","siteMetadata","title","projects","allMarkdownRemark","edges","location","className","map","node","slug","fields","frontmatter","image","ogImage","excerpt","description","key","React","Component","pageQuery"],"mappings":"wNAOMA,E,kGACJC,OAAA,WAAS,IAECC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAWP,EAAKQ,kBAAkBC,MAExC,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,aACX,6BAASK,UAAU,WACjB,wBAAIA,UAAU,6CAAd,YAGA,wBAAIA,UAAU,oCAAd,gDAGA,yBAAKA,UAAU,wBACZJ,EAASK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACTC,EAAOD,EAAKE,OAAOD,KACnBR,EAAQO,EAAKG,YAAYV,OAASO,EAAKE,OAAOD,KAC9CG,EAAQJ,EAAKG,YAAYE,QACzBC,EAAUN,EAAKG,YAAYI,aAAeP,EAAKM,QACrD,OACE,kBAAC,IAAD,eACEE,IAAKP,EACLA,KAAMA,EACNK,QAASA,EACTb,MAAOA,EACPY,QAASD,GACLJ,EAAKG,qB,GA9BAM,IAAMC,WAyClBzB,YAER,IAAM0B,EAAS","file":"component---src-pages-projects-js-a4f0166169b4f0796c43.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport ProjectCard from \"../components/project-card\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass ProjectsPage extends React.Component {\r\n  render() {\r\n    /* Data comes to the gatsby page component as a prop from the page query */\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const projects = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"Projects\" />\r\n        <section className=\"section\">\r\n          <h1 className=\"has-text-centered is-size-1 mb-4 emphasis\">\r\n            Projects\r\n          </h1>\r\n          <h2 className=\"has-text-centered is-size-5 mb-6\">\r\n            Works, Projects, Commissions and Experiments\r\n          </h2>\r\n          <div className=\"columns is-multiline\">\r\n            {projects.map(({ node }) => {\r\n              const slug = node.fields.slug\r\n              const title = node.frontmatter.title || node.fields.slug\r\n              const image = node.frontmatter.ogImage\r\n              const excerpt = node.frontmatter.description || node.excerpt\r\n              return (\r\n                <ProjectCard\r\n                  key={slug}\r\n                  slug={slug}\r\n                  excerpt={excerpt}\r\n                  title={title}\r\n                  ogImage={image}\r\n                  {...node.frontmatter}\r\n                />\r\n              )\r\n            })}\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query ProjectsPageQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      filter: { frontmatter: { pageKey: { eq: \"project\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            description\r\n            liveUrl\r\n            repoUrl\r\n            ogImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 400) {\r\n                  ...GatsbyImageSharpFluid_withWebp\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}